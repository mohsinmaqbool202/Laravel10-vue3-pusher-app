#Sets the user that Nginx will run as.
user nginx;

#Automatically sets the number of worker processes based on the number of CPU cores.
worker_processes auto;

#Specifies the error log and process ID file locations.
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

#Configures Nginx event handling.
events {
    worker_connections 1024;
}

#Begins the HTTP server block.
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    #Defines the server block for Nginx.
    server {
        #Configures the server to listen on port 80 for all server names.
        listen 80 default_server;
        server_name _;

        #Sets the root directory for the server.
        root /var/www;

        #Specifies the default index files to use.
        index index.php index.html index.htm;

        #Defines how Nginx should handle different types of requests.
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        #Sets up a FastCGI pass to a PHP-FPM server.
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass php:9000;  # Assuming your PHP-FPM service is named "php" in Docker Compose
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        location ~ /\.ht {
            deny all;
        }
    }
}
